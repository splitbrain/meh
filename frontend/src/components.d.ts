/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface MehComments {
        /**
          * The base URL for where the meh system is hosted If not provided, attempts to detect from script tag
         */
        "backend": string;
        /**
          * Custom translations object that overrides default and loaded translations This allows users to provide their own translations directly
         */
        "customTranslations": string | Partial<typeof this.defaultTranslations>;
        /**
          * URL to an external stylesheet to be injected into the shadow DOM
         */
        "externalStyles": string;
        /**
          * The language code for translations If not provided, defaults to 'en'
         */
        "language": string;
        /**
          * When set, hides the reply link on comments
         */
        "noreply": boolean;
        /**
          * The post path to fetch comments for If not provided, defaults to the current page path
         */
        "post": string;
        /**
          * The site identifier to use If not provided, defaults to 'meh'
         */
        "site": string;
        /**
          * Comment sort order: 'oldest' (default), 'newest', or 'threaded' Can switched by the end user. User preference is saved in localStorage.
         */
        "sort": 'oldest' | 'newest' | 'threaded';
    }
    interface MehCount {
        /**
          * The base URL for where the meh system is hosted If not provided, attempts to detect from script tag
         */
        "backend": string;
        /**
          * Custom translations object that overrides default and loaded translations This allows users to provide their own translations directly
         */
        "customTranslations": string | Partial<typeof this.defaultTranslations>;
        /**
          * URL to an external stylesheet to be injected into the shadow DOM
         */
        "externalStyles": string;
        /**
          * The language code for translations If not provided, defaults to 'en'
         */
        "language": string;
        /**
          * When set to true, only the number will be displayed without any text
         */
        "numonly": boolean;
        /**
          * The post path to fetch comment count for If not provided, defaults to the current page path
         */
        "post": string;
        /**
          * The site identifier to use If not provided, defaults to 'meh'
         */
        "site": string;
    }
    interface MehForm {
        /**
          * The base URL for where the meh system is hosted If not provided, attempts to detect from script tag
         */
        "backend": string;
        /**
          * Custom translations object that overrides default and loaded translations This allows users to provide their own translations directly
         */
        "customTranslations": string | Partial<typeof this.defaultTranslations>;
        /**
          * URL to an external stylesheet to be injected into the shadow DOM
         */
        "externalStyles": string;
        /**
          * The language code for translations If not provided, defaults to 'en'
         */
        "language": string;
        /**
          * The post path to associate the comment with If not provided, defaults to the current page path
         */
        "post": string;
        /**
          * The site identifier to use If not provided, defaults to 'meh'
         */
        "site": string;
    }
    interface MehLogin {
        /**
          * The base URL for where the meh system is hosted If not provided, attempts to detect from script tag
         */
        "backend": string;
        /**
          * Custom translations object that overrides default and loaded translations This allows users to provide their own translations directly
         */
        "customTranslations": string | Partial<typeof this.defaultTranslations>;
        /**
          * URL to an external stylesheet to be injected into the shadow DOM
         */
        "externalStyles": string;
        /**
          * The language code for translations If not provided, defaults to 'en'
         */
        "language": string;
        /**
          * The site identifier to use If not provided, defaults to 'meh'
         */
        "site": string;
    }
    interface MehMastodon {
        /**
          * The base URL for where the meh system is hosted If not provided, attempts to detect from script tag
         */
        "backend": string;
        /**
          * Custom translations object that overrides default and loaded translations This allows users to provide their own translations directly
         */
        "customTranslations": string | Partial<typeof this.defaultTranslations>;
        /**
          * URL to an external stylesheet to be injected into the shadow DOM
         */
        "externalStyles": string;
        /**
          * The language code for translations If not provided, defaults to 'en'
         */
        "language": string;
        /**
          * The post path to fetch Mastodon link for If not provided, defaults to the current page path
         */
        "post": string;
        /**
          * The site identifier to use If not provided, defaults to 'meh'
         */
        "site": string;
    }
}
declare global {
    interface HTMLMehCommentsElement extends Components.MehComments, HTMLStencilElement {
    }
    var HTMLMehCommentsElement: {
        prototype: HTMLMehCommentsElement;
        new (): HTMLMehCommentsElement;
    };
    interface HTMLMehCountElement extends Components.MehCount, HTMLStencilElement {
    }
    var HTMLMehCountElement: {
        prototype: HTMLMehCountElement;
        new (): HTMLMehCountElement;
    };
    interface HTMLMehFormElement extends Components.MehForm, HTMLStencilElement {
    }
    var HTMLMehFormElement: {
        prototype: HTMLMehFormElement;
        new (): HTMLMehFormElement;
    };
    interface HTMLMehLoginElement extends Components.MehLogin, HTMLStencilElement {
    }
    var HTMLMehLoginElement: {
        prototype: HTMLMehLoginElement;
        new (): HTMLMehLoginElement;
    };
    interface HTMLMehMastodonElement extends Components.MehMastodon, HTMLStencilElement {
    }
    var HTMLMehMastodonElement: {
        prototype: HTMLMehMastodonElement;
        new (): HTMLMehMastodonElement;
    };
    interface HTMLElementTagNameMap {
        "meh-comments": HTMLMehCommentsElement;
        "meh-count": HTMLMehCountElement;
        "meh-form": HTMLMehFormElement;
        "meh-login": HTMLMehLoginElement;
        "meh-mastodon": HTMLMehMastodonElement;
    }
}
declare namespace LocalJSX {
    interface MehComments {
        /**
          * The base URL for where the meh system is hosted If not provided, attempts to detect from script tag
         */
        "backend"?: string;
        /**
          * Custom translations object that overrides default and loaded translations This allows users to provide their own translations directly
         */
        "customTranslations"?: string | Partial<typeof this.defaultTranslations>;
        /**
          * URL to an external stylesheet to be injected into the shadow DOM
         */
        "externalStyles"?: string;
        /**
          * The language code for translations If not provided, defaults to 'en'
         */
        "language"?: string;
        /**
          * When set, hides the reply link on comments
         */
        "noreply"?: boolean;
        /**
          * The post path to fetch comments for If not provided, defaults to the current page path
         */
        "post"?: string;
        /**
          * The site identifier to use If not provided, defaults to 'meh'
         */
        "site"?: string;
        /**
          * Comment sort order: 'oldest' (default), 'newest', or 'threaded' Can switched by the end user. User preference is saved in localStorage.
         */
        "sort"?: 'oldest' | 'newest' | 'threaded';
    }
    interface MehCount {
        /**
          * The base URL for where the meh system is hosted If not provided, attempts to detect from script tag
         */
        "backend"?: string;
        /**
          * Custom translations object that overrides default and loaded translations This allows users to provide their own translations directly
         */
        "customTranslations"?: string | Partial<typeof this.defaultTranslations>;
        /**
          * URL to an external stylesheet to be injected into the shadow DOM
         */
        "externalStyles"?: string;
        /**
          * The language code for translations If not provided, defaults to 'en'
         */
        "language"?: string;
        /**
          * When set to true, only the number will be displayed without any text
         */
        "numonly"?: boolean;
        /**
          * The post path to fetch comment count for If not provided, defaults to the current page path
         */
        "post"?: string;
        /**
          * The site identifier to use If not provided, defaults to 'meh'
         */
        "site"?: string;
    }
    interface MehForm {
        /**
          * The base URL for where the meh system is hosted If not provided, attempts to detect from script tag
         */
        "backend"?: string;
        /**
          * Custom translations object that overrides default and loaded translations This allows users to provide their own translations directly
         */
        "customTranslations"?: string | Partial<typeof this.defaultTranslations>;
        /**
          * URL to an external stylesheet to be injected into the shadow DOM
         */
        "externalStyles"?: string;
        /**
          * The language code for translations If not provided, defaults to 'en'
         */
        "language"?: string;
        /**
          * The post path to associate the comment with If not provided, defaults to the current page path
         */
        "post"?: string;
        /**
          * The site identifier to use If not provided, defaults to 'meh'
         */
        "site"?: string;
    }
    interface MehLogin {
        /**
          * The base URL for where the meh system is hosted If not provided, attempts to detect from script tag
         */
        "backend"?: string;
        /**
          * Custom translations object that overrides default and loaded translations This allows users to provide their own translations directly
         */
        "customTranslations"?: string | Partial<typeof this.defaultTranslations>;
        /**
          * URL to an external stylesheet to be injected into the shadow DOM
         */
        "externalStyles"?: string;
        /**
          * The language code for translations If not provided, defaults to 'en'
         */
        "language"?: string;
        /**
          * The site identifier to use If not provided, defaults to 'meh'
         */
        "site"?: string;
    }
    interface MehMastodon {
        /**
          * The base URL for where the meh system is hosted If not provided, attempts to detect from script tag
         */
        "backend"?: string;
        /**
          * Custom translations object that overrides default and loaded translations This allows users to provide their own translations directly
         */
        "customTranslations"?: string | Partial<typeof this.defaultTranslations>;
        /**
          * URL to an external stylesheet to be injected into the shadow DOM
         */
        "externalStyles"?: string;
        /**
          * The language code for translations If not provided, defaults to 'en'
         */
        "language"?: string;
        /**
          * The post path to fetch Mastodon link for If not provided, defaults to the current page path
         */
        "post"?: string;
        /**
          * The site identifier to use If not provided, defaults to 'meh'
         */
        "site"?: string;
    }
    interface IntrinsicElements {
        "meh-comments": MehComments;
        "meh-count": MehCount;
        "meh-form": MehForm;
        "meh-login": MehLogin;
        "meh-mastodon": MehMastodon;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "meh-comments": LocalJSX.MehComments & JSXBase.HTMLAttributes<HTMLMehCommentsElement>;
            "meh-count": LocalJSX.MehCount & JSXBase.HTMLAttributes<HTMLMehCountElement>;
            "meh-form": LocalJSX.MehForm & JSXBase.HTMLAttributes<HTMLMehFormElement>;
            "meh-login": LocalJSX.MehLogin & JSXBase.HTMLAttributes<HTMLMehLoginElement>;
            "meh-mastodon": LocalJSX.MehMastodon & JSXBase.HTMLAttributes<HTMLMehMastodonElement>;
        }
    }
}
